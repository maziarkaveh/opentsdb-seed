package no.uis.seeds.timeseriesdb.opentsdb

import no.uis.seeds.repository.MysqlRecordRepository
import no.uis.seeds.timeseriesdb.Query

class OpenTSDBHttpWriterTest extends GroovyTestCase {
    void setUp() {
        super.setUp()

    }

    void tearDown() {

    }

    void testPut() {

        new MysqlRecordRepository(sql: MysqlRecordRepository.DEFAULT_SQL).fetchAll().findAll { it.valid }.each {
            OpenTSDBHttp.instance.put(it)
        }
    }

    void testData() {
        def d1 =    [68:1, 70:7, 71:10, 72:12, 73:28, 74:36, 75:38, 76:20, 77:33, 78:32, 79:24, 80:16, 81:14, 82:12, 83:11, 84:8, 85:5, 86:2, 87:3, 88:3, 92:1, 130:1, 242:1, 243:1, 244:6, 245:3, 246:9, 247:9, 248:9, 249:14, 250:18, 251:18, 252:20, 253:22, 254:18, 255:21, 256:27, 257:37, 258:21, 259:26, 260:25, 261:31, 262:26, 263:25, 264:26, 265:19, 266:13, 267:9, 268:15, 269:12, 270:18, 271:5, 272:5, 273:12, 274:11, 275:7, 276:4, 277:9, 278:9, 279:10, 280:9, 281:15, 282:9, 283:14, 284:8, 285:3, 286:4, 287:7, 288:7, 289:2, 290:5, 291:5, 292:3, 293:3, 294:2, 295:3, 296:2, 298:1, 300:1, 303:1, 304:1, 306:1, 310:1, 312:1, 313:1, 316:1, 327:1, 2289:1]
        def d2 =    [5:5, 6:67, 7:43, 8:19, 9:13, 10:23, 11:8, 12:8, 13:12, 14:16, 15:5, 16:12, 17:11, 18:8, 19:19, 20:17, 21:13, 22:14, 23:12, 24:10, 25:12, 26:16, 27:24, 28:16, 29:23, 30:21, 31:16, 32:18, 33:12, 34:8, 35:6, 36:11, 37:9, 38:10, 39:3, 40:7, 41:4, 42:2, 43:9, 44:2, 45:4, 46:1, 47:1, 48:4, 49:2, 50:3, 52:2, 55:4, 58:2, 60:1, 61:1, 63:1, 64:2, 65:1, 71:2, 72:2, 73:2, 74:1, 75:3, 76:4, 77:3, 78:3, 79:9, 80:6, 81:7, 82:3, 83:3, 84:7, 85:5, 86:6, 87:2, 88:3, 89:4, 91:2, 92:1, 94:2, 95:1, 96:3, 97:1, 100:1, 101:2, 106:1, 108:1, 132:1, 136:3, 137:2, 139:1, 140:1, 141:1, 142:4, 143:4, 144:6, 145:7, 146:6, 147:8, 148:10, 149:12, 150:17, 151:13, 152:11, 153:10, 154:9, 155:12, 156:9, 157:12, 158:7, 159:10, 160:4, 161:8, 162:8, 163:9, 164:9, 165:6, 166:6, 167:4, 168:6, 169:9, 170:2, 171:1, 172:6, 173:3, 174:9, 175:3, 176:9, 177:2, 178:2, 179:3, 180:4, 181:3, 182:3, 184:1, 185:3, 186:2, 188:2, 190:1, 191:1, 192:1, 193:1, 195:1, 197:2, 198:2, 199:1, 200:1, 215:1, 555:1, 2837:1]


           def i=0
        def s1= d1.collect {"${it.key}\n" *it.value}.join('\n').replace('\n\n','\n')
        def s2= d2.collect {"${it.key}\n" *it.value}.join('\n').replace('\n\n','\n')

        new File('/Users/maziarkaveh/Downloads/data.dat').text= "id\n$s1"
        new File('/Users/maziarkaveh/Downloads/data2.dat').text= "id\n$s2"
println "id\n$s1"
        def p = {
            i++
            println "x$i=c(${it*.key.join(',')})";
            println "y$i=c(${it*.value.join(',')})";
        }
        p(d1)

        p(d2)
        println """
 plot(x1, y1, type="o",col="red" ,ylim=c(0,100),xlim=c(0,100))
 lines(x2, y2, type="o",col="blue",ylim=c(0,100),xlim=c(0,100))
"""

    }
    void testQuery() {

        println OpenTSDBHttp.instance.query(new Query(start: 1393925311000l, end: 1393999412000l))
    }
}
